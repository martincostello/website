<Project Sdk="Microsoft.NET.Sdk.Web">
  <PropertyGroup>
    <AspNetCoreHostingModel>InProcess</AspNetCoreHostingModel>
    <Description>https://martincostello.com/</Description>
    <EnableConfigurationBindingGenerator>true</EnableConfigurationBindingGenerator>
    <EnableRequestDelegateGenerator>true</EnableRequestDelegateGenerator>
    <InvariantGlobalization>true</InvariantGlobalization>
    <OutputType>Exe</OutputType>
    <PreserveCompilationContext>true</PreserveCompilationContext>
    <RootNamespace>MartinCostello.Website</RootNamespace>
    <Summary>Martin Costello's website</Summary>
    <TargetFramework>net8.0</TargetFramework>
    <TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
    <TypeScriptToolsVersion>latest</TypeScriptToolsVersion>
    <UserSecretsId>martincostello.com</UserSecretsId>
  </PropertyGroup>
  <PropertyGroup>
    <!-- TODO Remove if https://github.com/dotnet/sdk/issues/40500 implemented or when no longer only in nightly -->
    <ContainerBaseImage>mcr.microsoft.com/dotnet/nightly/runtime-deps:8.0-noble-chiseled</ContainerBaseImage>
    <ContainerFamily>noble-chiseled</ContainerFamily>
    <EnableSdkContainerSupport>true</EnableSdkContainerSupport>
    <PublishSelfContained>true</PublishSelfContained>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(CI)' == 'true' ">
    <ContainerImageTags>github-$(GITHUB_RUN_NUMBER)</ContainerImageTags>
    <ContainerImageTags Condition=" '$(GITHUB_HEAD_REF)' == '' ">$(ContainerImageTags);latest</ContainerImageTags>
    <ContainerRepository>$(GITHUB_REPOSITORY)</ContainerRepository>
    <ContainerTitle>$(GITHUB_REPOSITORY)</ContainerTitle>
    <ContainerVendor>$(GITHUB_REPOSITORY_OWNER)</ContainerVendor>
    <ContainerVersion>$(GITHUB_SHA)</ContainerVersion>
  </PropertyGroup>
  <ItemGroup>
    <ContainerPort Include="8080" Type="tcp" />
  </ItemGroup>
  <ItemGroup Condition=" '$(CI)' == 'true' ">
    <ContainerLabel Include="com.docker.extension.changelog" Value="$(GITHUB_SERVER_URL)/$(GITHUB_REPOSITORY)/commit/$(GITHUB_SHA)" />
    <ContainerLabel Include="com.docker.extension.publisher-url" Value="$(GITHUB_SERVER_URL)/$(GITHUB_REPOSITORY_OWNER)" />
  </ItemGroup>
  <ItemGroup>
    <Content Update="appsettings.json" CopyToOutputDirectory="PreserveNewest" />
  </ItemGroup>
  <ItemGroup>
    <PackageReference Include="Azure.Monitor.OpenTelemetry.AspNetCore" />
    <PackageReference Include="Microsoft.AspNetCore.AzureAppServices.HostingStartup" />
    <PackageReference Include="Microsoft.TypeScript.MSBuild" />
    <PackageReference Include="OpenTelemetry.Exporter.OpenTelemetryProtocol" />
    <PackageReference Include="OpenTelemetry.Extensions.Hosting" />
    <PackageReference Include="OpenTelemetry.Instrumentation.AspNetCore" />
    <PackageReference Include="OpenTelemetry.Instrumentation.Http" />
    <PackageReference Include="OpenTelemetry.Instrumentation.Runtime" />
    <PackageReference Include="OpenTelemetry.ResourceDetectors.Azure" />
  </ItemGroup>
  <ItemGroup>
    <Content Update="package.json;package-lock.json;tsconfig.json" CopyToPublishDirectory="Never" />
    <None Remove="assets\scripts\**\*.ts" />
    <TypeScriptCompile Include="assets\scripts\**\*.ts" />
  </ItemGroup>
  <Target Name="PrepublishScript" BeforeTargets="BeforeBuild">
    <Exec Command="npm ci" Condition=" '$(CI)' != '' and !Exists('$(MSBuildThisFileDirectory)\node_modules') " />
    <Exec Command="npm install" Condition=" '$(CI)' == '' and !Exists('$(MSBuildThisFileDirectory)\node_modules') " />
    <Exec Command="npm run build" Condition=" !Exists('$(MSBuildThisFileDirectory)\wwwroot\assets\js\main.js') " />
  </Target>
  <Target Name="AddGeneratedContentItems" BeforeTargets="AssignTargetPaths" Condition="'$(CI)' != ''">
    <ItemGroup>
      <Content Include="wwwroot/**" CopyToPublishDirectory="PreserveNewest" Exclude="$(DefaultItemExcludes);$(DefaultExcludesInProjectFolder);@(Content)" />
      <Content Include="wwwroot/.well-known/**" CopyToPublishDirectory="PreserveNewest" Exclude="$(DefaultItemExcludes)" />
    </ItemGroup>
  </Target>
</Project>
