@using Microsoft.AspNetCore.Html
@implements IUsesLayout<_Layout, LayoutModel>

<h1>@(LayoutModel.Title)</h1>
<p class="lead">
    Below are some links to GitHub projects that I either created or contribute to.
</p>
<br />
<div class="row">
    @{
        await ProjectCardAsync("martincostello/sqllocaldb", "SQL LocalDB Wrapper", "fa-solid fa-database",
        @<p>
            A .NET library for using the Microsoft SQL Server Express
            <a id="link-localdb" href="https://learn.microsoft.com/sql/relational-databases/express-localdb-instance-apis/sql-server-express-localdb-reference-instance-apis" rel="noopener" target="_blank" title="Learn about the SQL Server Express LocalDB API">
                LocalDB Instance API
            </a>.
        </p>);

        await ProjectCardAsync("justeat/httpclient-interception", "HttpClient Interception", "fa-solid fa-code",
        @<p>
            A .NET library for
            <a id="link-httpinterception" href="https://blog.martincostello.com/reliably-testing-http-integrations-in-dotnet-applications/" rel="noopener" target="_blank" title="Reliably Testing HTTP Integrations in a .NET Application">
                intercepting server-side HTTP dependencies
            </a>.
        </p>);

        await ProjectCardAsync("martincostello/lambda-test-server", "Lambda Test Server", "fa-solid fa-bolt",
        @<p>
            A .NET class library to use with integration tests of .NET functions in AWS Lambda.
        </p>);

        await ProjectCardAsync("App-vNext/Polly", "Polly", "fa-solid fa-crow",
        @<p>
            A .NET resilience and transient-fault-handling library for applications of any size.
        </p>);

        await ProjectCardAsync("domaindrivendev/Swashbuckle.AspNetCore", "Swashbuckle.AspNetCore", "fa-solid fa-skull-crossbones",
        @<p>
            Swagger/OpenAPI tools for documenting APIs built with ASP.NET Core.
        </p>);

        await ProjectCardAsync("aspnet-contrib/AspNet.Security.OAuth.Providers", "AspNet.Security.OAuth.Providers", "fa-solid fa-door-open",
        @<p>
            OAuth 2.0 social authentication providers for ASP.NET Core.
        </p>);

        await ProjectCardAsync("justeat/ApplePayJSSample", "Apple Pay JS Sample Code", "fa-brands fa-apple-pay",
        @<p>
            Sample code for integrating <a id="link-apple-pay-sample" href="https://developer.apple.com/documentation/applepayontheweb" rel="noopener" target="_blank" title="View the Apple Pay JS documentation">Apple Pay JS</a> into an ASP.NET Core website.
        </p>);

        await ProjectCardAsync("martincostello/SignInWithAppleSample", "Sign in with Apple Sample Code", "fa-brands fa-apple",
        @<p>
            A sample implementation of <a id="link-sign-in-with-apple-docs" href="https://developer.apple.com/documentation/signinwithapplerestapi" rel="noopener" target="_blank" title="View the Sign in with Apple documentation">Sign in with Apple</a> for ASP.NET Core.
        </p>);

        await ProjectCardAsync("martincostello/blog", "Blog", "fa-solid fa-blog",
        @<p>
            Martin&apos;s
            <a id="link-blog-project" href="@(Options.Value?.ExternalLinks?.Blog?.AbsoluteUri)" title="Visit Martin's blog" rel="noopener" target="_blank">blog</a>,
            a static site implemented using <a href="https://middlemanapp.com/" title="View the Middleman website" rel="noopener" target="_blank">Middleman</a>.
        </p>);

        await ProjectCardAsync("martincostello/alexa-london-travel", "Alexa London Travel", "fa-solid fa-train-subway",
        @<p>
            An Alexa skill that uses the <a id="link-tfl-api" href="https://api.tfl.gov.uk/" rel="noopener" target="_blank" title="View the TfL API">TfL API</a>.
            You can find the skill on <a id="link-amazon-skill" href="https://www.amazon.co.uk/dp/B01NB0T86R" rel="noopener" target="_blank" title="London Travel on amazon.co.uk">amazon.co.uk</a>.
        </p>);

        await ProjectCardAsync("martincostello/alexa-london-travel-site", "Alexa London Travel Site", "fa-brands fa-html5",
        @<p>
            A companion website for the London Travel Alexa skill using ASP.NET Core Identity.
        </p>);

        await ProjectCardAsync("martincostello/website", "This website", "fa-brands fa-html5",
        @<p>
            The very website you&apos;re looking at
            <a id="link-self-source" href="https://github.com/martincostello/website/blob/@(GitMetadata.Commit)/src/Website/Slices/Projects.cshtml#L@(CurrentLineNumber())" title="View the source for this page">
                right now
            </a>
            which is implemented using ASP.NET Core.
        </p>);
    }
</div>

@functions {
    public LayoutModel LayoutModel { get; } = new("Projects")
    {
        Description = "About Martin Costello's personal projects.",
    };

    protected override Task ExecuteSectionAsync(string name)
    {
        if (name is "scripts")
        {
            <script async defer src="https://buttons.github.io/buttons.js"></script>
        }

        return Task.CompletedTask;
    }

    private static int CurrentLineNumber([System.Runtime.CompilerServices.CallerLineNumber] int lineNumber = 0)
        => lineNumber;

    private async Task<IHtmlContent> ProjectCardAsync(
        string repository,
        string title,
        string iconClasses,
        Func<HtmlContentBuilder?, IHtmlContent> description)
    {
        <div class="col-lg-4 mb-3">
            <div class="card">
                <div class="card-header">
                    <span class="@(iconClasses) pe-1" aria-hidden="true"></span>
                    @(title)
                </div>
                <div class="card-body">
                    <p>
                        @(description(null))
                    </p>
                    <p>
                        @(await RenderPartialAsync<_GitHubStar, string>(repository))
                        @(await RenderPartialAsync<_GitHubFork, string>(repository))
                    </p>
                    <p>
                        <a id="link-repo-@(repository)" href="https://github.com/@(repository)" rel="noopener" target="_blank" title="View the project in GitHub" class="btn btn-lg btn-primary">
                            Visit project site &raquo;
                        </a>
                    </p>
                </div>
            </div>
        </div>
        return HtmlString.Empty;
    }
}
